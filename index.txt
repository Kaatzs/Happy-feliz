<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feliz Cumpleaños - Sopla las Velas</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-image: url('https://hebbkx1anhila5yf.public.blob.vercel-storage.com/background.jpg-zC7bXg3bUfGpUWvxRL1El19TEQMxDK.jpeg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            overflow-x: hidden;
            position: relative;
        }

        .container {
            text-align: center;
            padding: 20px;
            max-width: 100%;
            position: relative;
            z-index: 10;
        }

        .title {
            font-size: clamp(2rem, 8vw, 4rem);
            font-weight: bold;
            color: #D4A574;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin-bottom: 30px;
            letter-spacing: 2px;
        }

        .cake-container {
            position: relative;
            display: inline-block;
            margin: 40px 0;
            transition: opacity 0.5s ease;
        }

        .cake-container.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .cake {
            width: clamp(200px, 50vw, 400px);
            height: auto;
            cursor: pointer;
            transition: transform 0.3s ease;
            animation: breathe 2s ease-in-out infinite;
            filter: drop-shadow(0 10px 20px rgba(0,0,0,0.2));
        }

        .cake:hover {
            transform: scale(1.05);
        }

        @keyframes breathe {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.02); }
        }

        @keyframes blowCandles {
            0% { transform: scale(1); }
            25% { transform: scale(1.1); }
            50% { transform: scale(0.95); }
            75% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        .cake.blown {
            animation: blowCandles 0.8s ease-in-out;
        }

        .subtitle {
            font-size: clamp(1.5rem, 6vw, 3rem);
            font-weight: bold;
            color: #D4A574;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin-top: 30px;
            letter-spacing: 1px;
        }

        .instruction {
            font-size: clamp(0.9rem, 3vw, 1.2rem);
            color: #B8956A;
            margin-top: 20px;
            font-style: italic;
        }

        .continue-message {
            font-size: clamp(1rem, 4vw, 1.5rem);
            color: #D4A574;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin-top: 20px;
            animation: pulse 1.5s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        /* Burbujas flotantes */
        .bubbles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            overflow: hidden;
        }

        .bubble {
            position: absolute;
            background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 70%, transparent 100%);
            border-radius: 50%;
            animation: float linear infinite;
            opacity: 0.4;
        }

        @keyframes float {
            0% {
                transform: translateY(100vh) scale(0);
                opacity: 0;
            }
            10% {
                opacity: 0.4;
            }
            90% {
                opacity: 0.4;
            }
            100% {
                transform: translateY(-100px) scale(1);
                opacity: 0;
            }
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            animation: fadeIn 0.3s ease;
        }

        .modal-content {
            position: relative;
            background-size: cover;
            background-position: center;
            margin: 5% auto;
            width: clamp(300px, 90%, 600px);
            height: clamp(400px, 70vh, 500px);
            border-radius: 20px;
            animation: slideIn 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            overflow: hidden;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .photo-display {
            width: 90%;
            height: 80%;
            border-radius: 15px;
            object-fit: cover;
            border: 4px solid #D4A574;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }

        .photo-message {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(212, 165, 116, 0.9);
            color: white;
            padding: 10px 20px;
            border-radius: 20px;
            font-size: clamp(0.9rem, 3vw, 1.2rem);
            font-weight: bold;
            text-align: center;
            max-width: 90%;
            opacity: 0;
            animation: messageAppear 0.5s ease 1s forwards;
        }

        @keyframes messageAppear {
            from { opacity: 0; transform: translateX(-50%) translateY(20px); }
            to { opacity: 1; transform: translateX(-50%) translateY(0); }
        }

        .counter {
            position: absolute;
            top: 15px;
            left: 20px;
            background-color: rgba(212, 165, 116, 0.9);
            color: white;
            padding: 8px 15px;
            border-radius: 15px;
            font-weight: bold;
            font-size: clamp(0.8rem, 2.5vw, 1rem);
        }

        /* Final Message Input */
        .final-message-container {
            display: none;
            text-align: center;
            margin-top: 40px;
        }

        .final-message-container.show {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        .final-input {
            width: clamp(250px, 80%, 400px);
            padding: 15px;
            font-size: clamp(1rem, 4vw, 1.2rem);
            border: 3px solid #D4A574;
            border-radius: 15px;
            background-color: rgba(255,255,255,0.9);
            color: #8B4513;
            text-align: center;
            font-weight: bold;
        }

        .final-input::placeholder {
            color: #D4A574;
            opacity: 0.7;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }
            
            .modal-content {
                margin: 10% auto;
                height: auto;
                min-height: 400px;
            }
        }
    </style>
</head>
<body> 
    <audio id="backgroundMusic" autoplay loop>
        <source src="musica/cancion.mp3" type="audio/mpeg">
    </audio>

    <div class="bubbles" id="bubbles"></div>

    <div class="container">
        <h1 class="title">FELIZ HAPPY</h1>
        
        <div class="cake-container" id="cakeContainer">
            <img src="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/cake-9pfOfpkkNagV2t5G7AOipGp9EeKp7t.png" alt="Pastel de cumpleaños" class="cake" id="cake">
        </div>
        
        <h2 class="subtitle">SOPLA LAS VELAS</h2>
        <p class="instruction" id="instruction"></p>
        
        <div class="continue-message" id="continueMessage" style="display: none;">
        </div>

        <div class="final-message-container" id="finalMessageContainer">
            <h3 style="color: #D4A574; font-size: clamp(1.5rem, 5vw, 2.5rem); margin-bottom: 20px;">¡Felicidades! 🎉</h3>
            <input type="text" class="final-input" id="finalInput" placeholder="Escribe tu mensaje especial aquí..." maxlength="100">
        </div>
    </div>

    <div id="photoModal" class="modal">
        <div class="modal-content" id="modalContent">
            <div class="counter" id="counter">1 / 17</div>
            <img src="/placeholder.svg" alt="Foto especial" class="photo-display" id="photoDisplay">
            <div class="photo-message" id="photoMessage"></div>
        </div>
    </div>

    <script>
        // CONFIGURACIÓN - Modifica estas arrays según tus necesidades
        const PHOTOS = [
            'fotos/foto1.jpg',
            'fotos/foto2.jpg',
            'fotos/foto3.jpg',
            'fotos/foto4.jpg',
            'fotos/foto5.jpg',
            'fotos/foto6.jpg',
            'fotos/foto7.jpg',
            'fotos/foto8.jpg',
            'fotos/foto9.jpg',
            'fotos/foto10.jpg',
            'fotos/foto11.jpg',
            'fotos/foto12.jpg',
            'fotos/foto13.jpg',
            'fotos/foto14.jpg',
            'fotos/foto15.jpg',
            'fotos/foto16.jpg',
            'fotos/foto17.jpg'
        ];

        const MESSAGES = [
            '¡Nuestro primer recuerdo juntos! 💕',
            'Ese día especial que nunca olvidaré ✨',
            'Tu sonrisa siempre ilumina mi día 😊',
            'Aventuras que quedaron en el corazón 🌟',
            'Momentos que valen más que mil palabras 💖',
            'Risas que resuenan en mi memoria 😄',
            'Juntos creamos los mejores momentos 🎈',
            'Tu felicidad es mi felicidad 🌈',
            'Recuerdos que atesoro para siempre 💎',
            'Cada momento contigo es especial 🦋',
            'Gracias por ser parte de mi vida 🌸',
            'Tus abrazos son mi lugar favorito 🤗',
            'Contigo todo es más bonito 🌺',
            'Eres la razón de mis mejores sonrisas 😍',
            'Juntos escribimos nuestra historia 📖',
            'Tu amistad es mi tesoro más preciado 💝',
            '¡Eres increíble y te quiero mucho! 🎂❤️'
        ];

        // Variables del juego
        let currentPhotoIndex = 0;
        const totalPhotos = PHOTOS.length;

        // Elementos del DOM
        const cake = document.getElementById('cake');
        const cakeContainer = document.getElementById('cakeContainer');
        const modal = document.getElementById('photoModal');
        const modalContent = document.getElementById('modalContent');
        const photoDisplay = document.getElementById('photoDisplay');
        const photoMessage = document.getElementById('photoMessage');
        const counter = document.getElementById('counter');
        const instruction = document.getElementById('instruction');
        const continueMessage = document.getElementById('continueMessage');
        const finalMessageContainer = document.getElementById('finaslMesageContainer');
        const backgroundMusic = document.getElementById('backgroundMusic');
        const bubblesContainer = document.getElementById('bubbles');

        // Reproducir música automáticamente al cargar la página
        window.addEventListener('load', function() {
            backgroundMusic.play().catch(e => {
                console.log('Autoplay bloqueado. La música se reproducirá con la primera interacción.');
            });
        });

        // Función para crear burbujas
        function createBubble() {
            const bubble = document.createElement('div');
            bubble.classList.add('bubble');
            
            // Tamaño aleatorio entre 10px y 80px
            const size = Math.random() * 70 + 10;
            bubble.style.width = size + 'px';
            bubble.style.height = size + 'px';
            
            // Posición horizontal aleatoria
            bubble.style.left = Math.random() * 100 + '%';
            
            // Duración de animación aleatoria entre 8 y 15 segundos
            const duration = Math.random() * 7 + 8;
            bubble.style.animationDuration = duration + 's';
            
            // Retraso aleatorio
            bubble.style.animationDelay = Math.random() * 2 + 's';
            
            bubblesContainer.appendChild(bubble);
            
            // Eliminar la burbuja después de la animación
            setTimeout(() => {
                if (bubble.parentNode) {
                    bubble.parentNode.removeChild(bubble);
                }
            }, (duration + 2) * 1000);
        }

        // Crear burbujas continuamente
        function startBubbles() {
            createBubble();
            // Crear nueva burbuja cada 1-3 segundos
            setTimeout(startBubbles, Math.random() * 2000 + 1000);
        }

        // Iniciar las burbujas
        startBubbles();

        // Función para soplar las velas
        cake.addEventListener('click', function() {
            if (currentPhotoIndex >= totalPhotos) return;

            // Intentar reproducir música si no está sonando
            backgroundMusic.play().catch(e => {
                // Silencioso si no se puede reproducir
            });

            // Animación del pastel
            cake.classList.add('blown');
            
            setTimeout(() => {
                cake.classList.remove('blown');
                showPhotoModal();
            }, 800);
        });

        // Función para mostrar el modal con la foto
        function showPhotoModal() {
            // Configurar la foto y mensaje actuales
            photoDisplay.src = PHOTOS[currentPhotoIndex];
            photoMessage.textContent = MESSAGES[currentPhotoIndex];
            counter.textContent = `${currentPhotoIndex + 1} / ${totalPhotos}`;
            
            // Resetear la animación del mensaje (ahora con 1 segundo de espera)
            photoMessage.style.animation = 'none';
            setTimeout(() => {
                photoMessage.style.animation = 'messageAppear 0.5s ease 1s forwards';
            }, 10);
            
            // Mostrar modal
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        // Cerrar modal al hacer clic en él
        modalContent.addEventListener('click', function() {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
            
            currentPhotoIndex++;
            
            if (currentPhotoIndex < totalPhotos) {
                // Mostrar mensaje para continuar
                instruction.style.display = 'none';
                continueMessage.style.display = 'block';
            } else {
                // Llegamos al final - mostrar input final
                cakeContainer.classList.add('hidden');
                instruction.style.display = 'none';
                continueMessage.style.display = 'none';
                
                setTimeout(() => {
                    finalMessageContainer.classList.add('show');
                }, 500);
            }
        });

        // Prevenir que el modal se cierre al hacer clic fuera
        modal.addEventListener('click', function(event) {
            if (event.target === modal) {
                // No hacer nada - solo se cierra tocando el contenido
            }
        });

        // Manejar el input final
        document.getElementById('finalInput').addEventListener('input', function(e) {
            // Aquí puedes agregar lógica para guardar el mensaje final
            console.log('Mensaje final:', te.targe.value);
        });

        // Optimización para móviles
        if (window.innerWidth <= 768) {
            cake.style.animationDuration = '1.5s';
        }
    </script>
</body>
</html>